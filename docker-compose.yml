services:
  auth-service:
    build: ./auth-service
    #image: backendproject-final-auth-service
    ports:
      - "8001:8080"
    depends_on:
      PostgreSQL:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
   # volumes:
   #    - ./auth-service/src/main/java/org/toyota/logs/containerLogs.log:/mylogs.log
  user-management-service:
    build: ./user-management-service
    ports:
      - "8002:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
   # volumes:
    #  - ./user-management-service/src/main/java/org/toyota/logs/containerLogs.log:/mylogs.log

  vehicle-management-service:
    build: ./vehicle-management-service
    ports:
      - "8003:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
   # volumes:
   #   - ./vehicle-management-service/src/main/java/org/toyota/logs/containerLogs.log:/mylogs.log

  terminal-service:
    build: ./terminal-service
    ports:
      - "8004:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres

  PostgreSQL:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=toyota123
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5


networks:
  auth-service:
  PostgreSQL:
  user-management-service: